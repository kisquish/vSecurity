# Allow Thymeleaf templates to be reloaded at dev time
spring.thymeleaf.cache: false
server.tomcat.access_log_enabled: true

qui.n: Sorry, \n You will probably often attempt this PAGE. :/ Sorry

server.port: 8889

# server.port = 8089

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "BDPoc"
# ----------
# For production, have to be Uncomment
#spring.datasource.url = jdbc:mysql://192.168.1.98:3306/BDPoc?useSSL=false
##
## Username and password
#spring.datasource.username = pocdb
#spring.datasource.password = VMware1!

## just for testing, have to be comment when commit
spring.datasource.url = jdbc:mysql://193.70.44.143:3306/BDPoc?useSSL=false
#
# Username and password
spring.datasource.username = ptcNikeDB
spring.datasource.password = P0kl@vers!NikeDB

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1 

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
